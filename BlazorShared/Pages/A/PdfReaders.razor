@page "/pdfReaders"
@attribute [TabItemOption(Text = "PDF阅读器")]
@namespace DemoShared.Pages

<a href="https://www.nuget.org/packages/BootstrapBlazor.PdfReader#readme-body-tab"><h4>PDF阅读器 Pdf Reader</h4></a>

<Tab>
    <TabItem Text="常规">
        <PdfReader Filename=@Filename />
        <pre>@contents</pre>
    </TabItem>
    <TabItem Text="流化">
        <h6>使用流化模式,可跨域读取文件</h6>
        <div class="row g-3">
            <div class="col-12">
                <BootstrapInputGroup>
                    <BootstrapInput @bind-Value="@UrlBaseStream" />
                    <BootstrapInput @bind-Value="@FilenameStream" />
                    <Button Color="Color.Primary" OnClick="Apply">加载</Button>
                </BootstrapInputGroup>
            </div>
        </div>
        <PdfReader @ref="pdfReader" UrlBase="@UrlBaseStream" Filename="@FilenameStream" StreamMode="true" />
    </TabItem>
</Tab>


@code{
    private string contents;
    private string View { get; set; } = "FitV";
    private string Pagemode { get; set; } = "thumbs";
    private string Search { get; set; } = "Performance";
    private string ViewerBase { get; set; } = "/_content/BootstrapBlazor.PdfReader/web/viewer.html";
    private int Page { get; set; } = 3;
    private bool ForcePDFJS { get; set; } = true;
    PdfReader pdfReader;
    PdfReader pdfReader2;
    private string Filename = "/_content/DemoShared/samples/sample.pdf";
    private string UrlBaseStream = "https://blazor.app1.es/_content/DemoShared/samples/";
    private string FilenameStream = "sample2.pdf";

    private Task OnInfo(string contents)
    {
        this.contents = contents;
        StateHasChanged();
        return Task.CompletedTask;
    }
    private Task OnError(string contents)
    {
        this.contents = contents;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private async Task Apply()
    {
        await pdfReader.Refresh();
    }
    private async Task Apply1()
    {
        View = View == "FitV" ? "" : "FitV";
        await pdfReader2.Refresh();
    }
    private async Task Apply2()
    {
        Pagemode = Pagemode == "thumbs" ? "" : "thumbs";
        await pdfReader2.Refresh();
    }
    private async Task Apply3()
    {
        Page = 1;
        await pdfReader2.Refresh();
    }
    private async Task Apply4()
    {
        Page++;
        await pdfReader2.Refresh();
    }
    private async Task Apply5()
    {
        await pdfReader2.Refresh();
    }

}
